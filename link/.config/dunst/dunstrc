[global]
	font = "Monospace 8"

	# allow a small subset of html markup:
	# <b>bold</b>
	# <i>italic</i>
	# <s>strikethrough<s/>
	# <u>underline</u>
	#
	# for a complete reference see http://developer.gnome.org/pango/stable/PangoMarkupFormat.html
	# If markup is not allowed, those tags will be stripped out of the message.
	allow_markup = yes

	# The format of the message. Possible variables are:
	#   %a  appname
	#   %s  summary
	#   %b  body
	#   %i  iconname (including its path)
	#   %I  iconname (without its path)
	#   %p  progress value if set ([  0%] to [100%]) or nothing
	# Markup is allowed
	format = "<span font_weight="bold" font="Monospace 10">%s</span> <b>%p</b>\n%b"

	# Sort messages by urgency
	sort = yes

	# Show how many messages are currently hidden (because of geometry)
	indicate_hidden = true

	# alignment of message text.
	# Possible values are "left", "center" and "right"
	alignment = left

	# The frequency with wich text that is longer than the notification
	# window allows bounces back and forth.
	# This option conflicts with 'word_wrap'.
	# Set to 0 to disable
	bounce_freq = 0

	# show age of message if message is older than show_age_threshold seconds.
	# set to -1 to disable
	show_age_threshold = 60

	# Split notifications into multiple lines if they don't fit into geometry
	word_wrap = yes

	# Ignore newlines '\n' in notifications
	ignore_newline = no

	# the geometry of the window
	# geometry [{width}]x{height}][+/-{x}+/-{y}]
	# The geometry of the message window.
	# The height is measured in number of notifications everything else in pixels. If the width
	# is omitted but the height is given ("-geometry x2"), the message window
	# expands over the whole screen (dmenu-like). If width is 0,
	# the window expands to the longest message displayed.
	# A positive x is measured from the left, a negative from the
	# right side of the screen.  Y is measured from the top and down respectevly.
	# The width can be negative. In this case the actual width is the
	# screen width minus the width defined in within the geometry option.
	# geometry = "300x5-20+20"
	geometry = "270x20-20+33"

	# The transparency of the window. range: [0; 100]
	# This option will only work if a compositing windowmanager is present (e.g. xcompmgr, compiz, etc..)
	transparency = 10

	# Don't remove messages, if the user is idle (no mouse or keyboard input)
	# for longer than idle_threshold seconds.
	# Set to 0 to disable.
	idle_threshold = 30

	# Which monitor should the notification be displayed on.
	monitor = 0

	# Display notification on focused monitor. Possible modes are:
	# mouse: follow mouse pointer
	# keyboard: follow window with keyboard focus
	# none: don't follow anything
	#
	# "keyboard" needs a windowmanager that exports the _NET_ACTIVE_WINDOW property.
	# This should be the case for almost all modern windowmanagers.
	#
	# If this option is set to mouse or keyboard, the monitor option will be
	# ignored.
	follow = mouse

	# should a notification popped up from history be sticky or
	# timeout as if it would normally do.
	# sticky_history = no
	sticky_history = yes

	# The height of a single line. If the height is smaller than the font height,
	# it will get raised to the font height.
	# This adds empty space above and under the text.
	line_height = 2

	# Draw a line of 'separator_height' pixel height between two notifications.
	# Set to 0 to disable
	separator_height = 1

	# Padding between text and separator
	padding = 16

	# Horizontal padding
	horizontal_padding = 12

	# Define a color for the separator.
	# possible values are:
	#  * auto: dunst tries to find a color fitting to the background
	#  * foreground: use the same color as the foreground
	#  * frame: use the same color as the frame.
	#  * anything else will be interpreted as a X color
	# separator_color = frame
	separator_color = auto

	# Print a notification on startup
	# This is mainly for error detection, since dbus (re-)starts dunst
	# automatically after a crash.
	# startup_notification = true
	startup_notification = false

	# dmenu path
	dmenu = /usr/bin/dmenu -p dunst:

	# Browser for opening urls in context menu
	browser = /usr/bin/chromium

    # Align icons left/right/off
    icon_position = left

    # Paths to default icons.
    icon_folders = /usr/share/icons/gnome/32x32/status/:/usr/share/icons/gnome/32x32/devices/

[frame]
    width = 2
    color = "#777777"

[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+parenright
    context = ctrl+shift+semicolon

[urgency_low]
    background = "#ffffff"
    foreground = "#000000"
    timeout = 30

[urgency_normal]
    background = "#84dbed"
    foreground = "#000000"
    timeout = 45

[urgency_critical]
    background = "#ff9999"
    foreground = "#000000"
    timeout = 0

[libpurple_signed]
    appname = libpurple
    summary = *igned*
    urgency = low
    timeout = 3
    background = "#ccff33"

[libpurple_came_back]
    appname = libpurple
    summary = "*came*"
    format = ""

[libpurple_went_away]
    appname = libpurple
    summary = "*went*"
    format = ""

[libpurple_says]
    appname = libpurple
    summary = *ays*
    urgency = critical
    background = "#ccff33"

[libpurple]
    appname = libpurple
    urgency = critical
    background = "#ccff33"

[twitter]
    appname = Pidgin
    summary = *twitter.com*
    urgency = low

[turpial]
    appname = Turpial
    urgency = low

[ttytter]
    summary = "TTYtter*"
    urgency = low

[dunst-sum]
    appname = gmailnotify.py
    summary = "*[dD]unst*"
    urgency = critical

[dunst-body]
    appname = gmailnotify.py
    body = "*[dD]unst*"
    urgency = critical

[mcabber]
    appname = notify-send
    summary = "*jabber*"
    urgency = critical

[irc]
    appname = weechat
    timeout = 10
    background = "#99FF33"
    foreground = "#000000"

[XChat]
    appname = XChat
    timeout = 10
    background = "#99FF33"
    foreground = "#000000"

[test]
    summary = "*test*"
    background="#22dd22"

# vim: ft=cfg
