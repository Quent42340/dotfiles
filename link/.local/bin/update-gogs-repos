#!/bin/bash
#-------------------------------------------------------------------------------
# update-gogs-repos
#  by gnidmoo
#-------------------------------------------------------------------------------

# Get .bashrc path
if [ -e ~/.mybashrc ]
then
	BASHRC_PATH=~/.mybashrc
else
	BASHRC_PATH=~/.bashrc
fi

# Check if internet is available
internet_available=0
ping_test="$(ping -c 1 8.8.8.8)"
if [ -z "$(echo $ping_test | grep unreachable)" ] && [ -z "$(echo $ping_test | grep "100% packet loss")" ]
then
	internet_available=1
fi

# Trying to download 'colorsrc'
if [ ! -e ~/.local/lib/colorsrc ] && [ $internet_available -eq 1 ]
then
	curl -O https://raw.githubusercontent.com/Quent42340/dotfiles/master/link/.local/lib/colorsrc > /dev/null 2>&1 && \
	mkdir -p ~/.local/lib && \
	mv colorsrc ~/.local/lib/
fi

if [ -e ~/.local/lib/colorsrc ]
then
	source ~/.local/lib/colorsrc
fi

# Get username for Gogs
if [ -z "$GOGS_USER" ]
then
	echo -ne "${BCYAN}Please enter your Gogs username:" $WHITE
	read gogs_username
	gogs_username=$(echo -n $gogs_username)
	echo -e "\nexport GOGS_USER=$gogs_username\n" >> $BASHRC_PATH
	export GOGS_USER=$gogs_username
	echo
fi

echo -e "${BGREEN}\\o/ Welcome" $GOGS_USER "\\o/\n"

# Auto update this script
if [ -e ~/.local/bin/update-gogs-repos ] && [ $internet_available -eq 1 ]
then
	rm -f /tmp/update-gogs-repos

	if curl -o /tmp/update-gogs-repos -O https://raw.githubusercontent.com/Quent42340/dotfiles/master/link/.local/bin/update-gogs-repos > /dev/null 2>&1
	then
		if [ -n "$(diff ~/.local/bin/update-gogs-repos /tmp/update-gogs-repos)" ]
		then
			echo -ne "${BCYAN}A new version was downloaded. Show diff? [y/N]" $WHITE
			read answer

			if [ "$answer" == "y" ]
			then
				diff ~/.local/bin/update-gogs-repos /tmp/update-gogs-repos
			fi

			echo -ne "${BCYAN}Install the new version? [y/N]" $WHITE
			read answer

			if [ "$answer" == "y" ]
			then
				mkdir -p ~/.local/bin
				mv /tmp/update-gogs-repos ~/.local/bin/
				chmod +x ~/.local/bin/update-gogs-repos
				echo -e "\n${BCYAN}Please restart the script" $WHITE
				exit 0
			fi
		else
			echo -e "${BCYAN}The script is up-to-date" $WHITE
		fi

		echo
	else
		echo -e "${BRED}Can't check for updates. Curl download failed." $WHITE
	fi
else
	echo -e "${BRED}Can't check for updates. Check your internet connection and check if your script is installed in ~/.local/bin/" $WHITE
fi

# Add gogs to repositories
base_folder="$(pwd)"
for i in $(find . -type d -print | sort | tr ' ' 'ยง')
do
	i="$(echo $i | tr 'ยง' ' ')"

	if [ "$i" != "." ]
	then
		if [ ! -d "$(pwd)/$i" ]
		then
			echo -e "${BRED}This folder doesn't exist: $(pwd)/$i" $WHITE "\n"
			continue
		fi

		if [ ! -d "$(pwd)/$i/.git" ]
		then
			continue
		fi

		cd "$(pwd)/$i"

		if [ -n "$(git remote -v | grep epitech)" ]
		then
			if [ -n "$(git remote -v | grep gogs)" ]
			then
				echo -e "$BBLUE$(pwd) already has a rule for Gogs" $WHITE "\n"
				cd "$base_folder"
				continue
			fi

			old_origin="$(git remote -v | grep epitech | grep push | awk '{print $2}')"

			echo -e "$BCYAN=> Trying to add 'gogs' remote in $(basename "$(pwd)")..." $WHITE
			git remote remove origin
			git remote add origin "$old_origin"
			git remote set-url --add origin "$old_origin"

			# Add 'gogs' remote to gogs repos
			gogs_repo="$(basename "$(pwd)").git"
			push_code="$(git push gogs@git.gnidmoo.tk:$GOGS_USER/$gogs_repo master > /dev/null 2>&1 ; echo $?)"
			if [ $push_code -eq 0 ]
			then
				echo -e $BBLUE "[*] Gogs repo found in" "$(pwd)" $WHITE
				git remote set-url --add origin gogs@git.gnidmoo.tk:$GOGS_USER/$(basename "$(pwd)").git

				echo -e $BBLUE "[*] Trying to push to 'origin'..." $WHITE
				push_code="$(git push -u origin master > /dev/null 2>&1 ; echo $?)"
				if [ "$push_code" == "0" ]
				then
					echo -e $BGREEN "[*] OK." $WHITE
				else
					echo -e $BRED "[*] Failed. Code: $push_code" $WHITE
				fi
			else
				echo -e $BBLUE "[*] $(pwd) is not a Gogs repo or doesn't have any commit" $WHITE
			fi
		else
			echo -e "$BBLUE$(pwd) is not an Epitech repo" $WHITE
		fi

		echo

		cd "$base_folder"
	fi
done
